{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState: {\n    value: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.value.push(action.payload);\n    },\n    editIsDo: (state, action) => {\n      state.value.map((el, id) => {\n        if (id == action.payload.id) {\n          el.isDo = !el.isDo;\n        }\n      });\n    },\n    delTask: (state, action) => {\n      state.value.splice(action.payload.id, 1);\n    },\n    editableTask: (state, action) => {\n      state.value.splice(action.payload.id, 1, action.payload.new);\n    }\n  }\n});\nexport const {\n  addTask,\n  editIsDo,\n  delTask,\n  editableTask /*sortTaskTitle*/\n} = taskSlice.actions;\nexport const selectTask = state => state.task.value;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","taskSlice","name","initialState","value","reducers","addTask","state","action","push","payload","editIsDo","map","el","id","isDo","delTask","splice","editableTask","new","actions","selectTask","task","reducer"],"sources":["C:/Users/a.prokudina/Desktop/repos/testnumedy/testnumedy/src/app/taskSlice.js"],"sourcesContent":["\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const taskSlice = createSlice({\r\n  name: 'task',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    addTask: (state,action)=>{  \r\n         state.value.push(action.payload) \r\n        }\r\n    ,\r\n    editIsDo: (state,action)=>{\r\n      state.value.map((el,id) => {\r\n        if(id == action.payload.id) {\r\n            el.isDo = !el.isDo;\r\n        }\r\n    });\r\n    },\r\n    delTask: (state,action) => {\r\n      state.value.splice(action.payload.id,1)\r\n    },\r\n    editableTask: (state,action) => {\r\n      state.value.splice(action.payload.id,1,action.payload.new)\r\n    },\r\n\r\n  },\r\n});\r\n\r\nexport const { addTask , editIsDo, delTask, editableTask, /*sortTaskTitle*/} = taskSlice.actions;\r\n\r\n\r\n\r\nexport const selectTask = state => state.task.value;\r\n\r\nexport default taskSlice.reducer;"],"mappings":"AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACH,KAAK,CAACK,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACjC,CAAC;IAELC,QAAQ,EAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACxBD,KAAK,CAACH,KAAK,CAACQ,GAAG,CAAC,CAACC,EAAE,EAACC,EAAE,KAAK;QACzB,IAAGA,EAAE,IAAIN,MAAM,CAACE,OAAO,CAACI,EAAE,EAAE;UACxBD,EAAE,CAACE,IAAI,GAAG,CAACF,EAAE,CAACE,IAAI;QACtB;MACJ,CAAC,CAAC;IACF,CAAC;IACDC,OAAO,EAAE,CAACT,KAAK,EAACC,MAAM,KAAK;MACzBD,KAAK,CAACH,KAAK,CAACa,MAAM,CAACT,MAAM,CAACE,OAAO,CAACI,EAAE,EAAC,CAAC,CAAC;IACzC,CAAC;IACDI,YAAY,EAAE,CAACX,KAAK,EAACC,MAAM,KAAK;MAC9BD,KAAK,CAACH,KAAK,CAACa,MAAM,CAACT,MAAM,CAACE,OAAO,CAACI,EAAE,EAAC,CAAC,EAACN,MAAM,CAACE,OAAO,CAACS,GAAG,CAAC;IAC5D;EAEF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,OAAO;EAAGK,QAAQ;EAAEK,OAAO;EAAEE,YAAY,CAAE;AAAiB,CAAC,GAAGjB,SAAS,CAACmB,OAAO;AAIhG,OAAO,MAAMC,UAAU,GAAGd,KAAK,IAAIA,KAAK,CAACe,IAAI,CAAClB,KAAK;AAEnD,eAAeH,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}