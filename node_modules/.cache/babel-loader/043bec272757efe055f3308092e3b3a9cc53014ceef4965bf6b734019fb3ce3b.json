{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.prokudina\\\\Desktop\\\\repos\\\\testnumedy\\\\testnumedy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editIsDo } from './app/taskSlice';\nimport { selectTask } from './app/taskSlice';\nimport './App.css';\nimport NewTask from './NewTask';\nimport { useNavigate } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const task = useSelector(selectTask);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [header, setHeader] = useState('');\n  const [isVisiblePassNote, setIsVisiblePassNote] = useState(true);\n  const [textTextarea, setTextTextarea] = useState('');\n  const editIdRef = useRef(0);\n\n  /*переход на стр Новая задача по клику */\n  function goToNewTask() {\n    navigate(\"/newTask\");\n  }\n\n  /*вывод списка всех заданий */\n  const AllTask = props => {\n    const arr = [];\n    if (props.allTask) {\n      props.allTask.map((str, id) => {\n        arr.push( /*#__PURE__*/_jsxDEV(AllTaskItem, {\n          id: id,\n          text: str.text,\n          header: str.header,\n          dateStart: str.fromDate,\n          dateEnd: str.endDate,\n          isDo: str.isDo\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this));\n      });\n    }\n    return arr;\n  };\n\n  /*изменение флага Выполнена/Не выполнена задача */\n  function changeIsDo(event) {\n    const id = event.currentTarget.id;\n    dispatch(editIsDo({\n      'id': id\n    }));\n  }\n\n  /*Клик по кнопке \"Удалить\" - выводим диалоговое окно. Далее удаляем или нет в зависимости от выбора пользователя */\n  function delTask(id) {}\n\n  /*отдельное задание */\n  const AllTaskItem = props => {\n    let dateStart_ = formatDate(props.dateStart);\n    let dateEnd_ = formatDate(props.dateEnd);\n    let a = 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textTaskDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headTask\",\n          children: props.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textTask\",\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divDate\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E: \", dateStart_]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u041E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u0435: \", dateEnd_]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsTaskDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: props.isDo,\n            onChange: changeIsDo,\n            id: props.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delEditButton\",\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n\n  /*вывод даты в нужном формате */\n  function formatDate(dat) {\n    const datDate = new Date(dat);\n    let monthNames = [\"янв\", \"фев\", \"март\", \"апр\", \"май\", \"июнь\", \"июль\", \"авг\", \"сент\", \"окт\", \"нояб\", \"декаб\"];\n    let mon = monthNames[datDate.getMonth()];\n    let newDate = `${datDate.getDate()} ${mon} ${datDate.getFullYear()}г`;\n    return newDate;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"goToButton\",\n          onClick: goToNewTask,\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrayOfTask\",\n          children: task !== null && task !== undefined && JSON.stringify(task) !== '{}' && JSON.stringify(task) !== '[]' ? /*#__PURE__*/_jsxDEV(AllTask, {\n            allTask: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emptyTasks\",\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447 \\u043F\\u0443\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PAdoROd0SDomOBAxuaJd8+6FfNI=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useSelector","useDispatch","editIsDo","selectTask","NewTask","useNavigate","Button","App","task","dispatch","navigate","header","setHeader","isVisiblePassNote","setIsVisiblePassNote","textTextarea","setTextTextarea","editIdRef","goToNewTask","AllTask","props","arr","allTask","map","str","id","push","text","fromDate","endDate","isDo","changeIsDo","event","currentTarget","delTask","AllTaskItem","dateStart_","formatDate","dateStart","dateEnd_","dateEnd","a","dat","datDate","Date","monthNames","mon","getMonth","newDate","getDate","getFullYear","undefined","JSON","stringify"],"sources":["C:/Users/a.prokudina/Desktop/repos/testnumedy/testnumedy/src/App.js"],"sourcesContent":["\nimport React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  editIsDo\n} from './app/taskSlice';\nimport { selectTask } from './app/taskSlice';\nimport './App.css';\nimport NewTask from './NewTask';\nimport {useNavigate} from \"react-router-dom\";\nimport Button from '@mui/material/Button';\n\nfunction App() {\n\n  const task=useSelector(selectTask);\n  const dispatch=useDispatch();\n  const navigate=useNavigate();\n\n  const [header , setHeader] = useState('');\n  const [isVisiblePassNote , setIsVisiblePassNote] = useState(true);\n  const [textTextarea , setTextTextarea] = useState('');\n  const editIdRef = useRef(0);\n\n  /*переход на стр Новая задача по клику */\n  function goToNewTask() {\n    navigate(\"/newTask\")\n  }\n\n  /*вывод списка всех заданий */\n  const AllTask = (props) => {\n    const arr=[];\n\n    if(props.allTask) {\n      props.allTask.map((str,id) => { \n          arr.push(<AllTaskItem key={id} \n                                 id={id} \n                               text={str.text} \n                             header={str.header}\n                             dateStart={str.fromDate}\n                             dateEnd={str.endDate}\n                             isDo={str.isDo}/>)\n      })\n    }\n    \n    return arr;\n  }\n\n  /*изменение флага Выполнена/Не выполнена задача */\n  function changeIsDo(event) {\n    const id=event.currentTarget.id;\n    dispatch(editIsDo({'id': id}));\n  }\n\n  /*Клик по кнопке \"Удалить\" - выводим диалоговое окно. Далее удаляем или нет в зависимости от выбора пользователя */\n  function delTask(id){\n    \n  }\n\n  /*отдельное задание */\n  const AllTaskItem = (props) => {\n    let dateStart_ = formatDate(props.dateStart) ;\n    let dateEnd_ = formatDate(props.dateEnd);\n    let a=1;\n\n    return(\n      <div className='itemTask'>\n        <div className='textTaskDiv'>\n          <div className='headTask'>{props.header}</div>\n          <div className='textTask'>{props.text}</div>\n          <div className='divDate'>\n            <span>Начало: {dateStart_}</span>\n            <span>Окончание: {dateEnd_}</span>\n          </div>\n        </div>\n        <div className='buttonsTaskDiv'>\n          <label>\n            <input type='checkbox' checked={props.isDo} onChange={changeIsDo} id={props.id}/>\n            Выполнено\n          </label>\n          \n\n            {/*<button id={props.id} className='delEditButton' onClick={delTask}>Удалить</button>*/}\n            <Button>Удалить</Button>\n\n\n            <button className='delEditButton'>Редактировать</button>\n\n        </div>\n\n      </div>);\n  }\n\n  /*вывод даты в нужном формате */\n  function formatDate(dat){\n\n    const datDate = new Date(dat);\n    let monthNames= [ \"янв\", \"фев\", \"март\", \"апр\", \"май\", \"июнь\",\"июль\", \"авг\", \"сент\", \"окт\", \"нояб\", \"декаб\"];\n    let mon=monthNames[datDate.getMonth()];\n    let newDate = `${datDate.getDate()} ${mon} ${datDate.getFullYear()}г`;\n    \n    return newDate;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <div className='mainDiv'>\n           <button className='goToButton' onClick={goToNewTask}>Создать новую задачу</button>\n           <div className='arrayOfTask'>\n           { \n            ((task!==null) && (task!==undefined) && (JSON.stringify(task)!=='{}') && (JSON.stringify(task)!=='[]')) ? \n              <AllTask allTask={task}/>\n              :\n              <div className='emptyTasks'>Список задач пуст</div>\n           }\n           </div>\n       </div>\n      </header>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}