{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.prokudina\\\\Desktop\\\\repos\\\\testnumedy\\\\testnumedy\\\\src\\\\NewTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTask } from './app/taskSlice';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport { useParams } from \"react-router-dom\";\nimport { selectTask } from './app/taskSlice';\n\n/*страница добавления новой задачи */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTask(props) {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [startTaskDate, setStartTaskDate] = useState(new Date());\n  const [endTaskDate, setEndTaskDate] = useState(new Date());\n  const [textHead, setTextHead] = useState('');\n  const [textBody, setTextBody] = useState('');\n  const task = useSelector(selectTask);\n\n  /*Переход на страницу Список задач по клику */\n  function goToApp() {\n    navigate(-1);\n  }\n\n  /*добавление новой задачи */\n  function addNewTask() {\n    let textHead = document.getElementById('taskHeader').value;\n    let textBody = document.getElementById('taskText').value;\n    const objNewTask = {\n      'header': textHead,\n      'text': textBody,\n      'fromDate': startTaskDate,\n      'endDate': endTaskDate,\n      'isDo': false\n    };\n    dispatch(addTask(objNewTask));\n    alert('Задача добавлена');\n  }\n  let paramFromApp = useParams();\n  let a = task[Number(paramFromApp)].header;\n  let b = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"goToButton marginNewTask\",\n          onClick: goToApp,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434 \\u043A \\u0441\\u043F\\u0438\\u0441\\u043A\\u0443 \\u0437\\u0430\\u0434\\u0430\\u0447\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"taskHeader\",\n          className: \"TitleTaskTextarea marginNewTask\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n          children: paramFromApp == 'new' ? '' : task[Number(paramFromApp)].header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"taskText\",\n          className: \"TextTaskTextarea marginNewTask\",\n          placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dateDiv addNewTask\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskDate\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: startTaskDate,\n              onChange: date => setStartTaskDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskDate\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: endTaskDate,\n              onChange: date => setEndTaskDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addNewTask\",\n          onClick: addNewTask,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0417\\u0430\\u0434\\u0430\\u0447\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n_s(NewTask, \"0P9RXTqoecnIMD1fXTHRQz1RXmw=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useParams];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","addTask","DatePicker","useParams","selectTask","NewTask","props","navigate","dispatch","startTaskDate","setStartTaskDate","Date","endTaskDate","setEndTaskDate","textHead","setTextHead","textBody","setTextBody","task","goToApp","addNewTask","document","getElementById","value","objNewTask","alert","paramFromApp","a","Number","header","b","date"],"sources":["C:/Users/a.prokudina/Desktop/repos/testnumedy/testnumedy/src/NewTask.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  addTask} from './app/taskSlice';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { selectTask } from './app/taskSlice';\r\n\r\n/*страница добавления новой задачи */\r\nfunction NewTask(props) {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch=useDispatch();\r\n  \r\n\r\n  const [startTaskDate, setStartTaskDate] = useState(new Date());\r\n  const [endTaskDate, setEndTaskDate] = useState(new Date());\r\n  const [textHead , setTextHead] = useState('');\r\n  const [textBody , setTextBody] = useState('');\r\n  const task = useSelector(selectTask);\r\n\r\n\r\n   /*Переход на страницу Список задач по клику */\r\n  function goToApp(){\r\n    navigate(-1)\r\n  }\r\n  \r\n  /*добавление новой задачи */\r\n  function addNewTask() {\r\n     let textHead=document.getElementById('taskHeader').value;\r\n     let textBody=document.getElementById('taskText').value;\r\n     \r\n     const objNewTask = {\r\n      'header':textHead,\r\n      'text': textBody,\r\n      'fromDate': startTaskDate,\r\n      'endDate': endTaskDate,\r\n      'isDo': false\r\n     }\r\n\r\n     dispatch(addTask(objNewTask));\r\n     alert('Задача добавлена');\r\n\r\n    }\r\n\r\n    let paramFromApp = useParams(); \r\n    let a=task[Number(paramFromApp)].header;\r\n    let b=0;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n       <div className='mainDiv'>\r\n        <button className='goToButton marginNewTask' onClick={goToApp}>Назад к списку задач</button>\r\n        <textarea id='taskHeader' className='TitleTaskTextarea marginNewTask' placeholder='Название задачи'>{(paramFromApp == 'new') ? '' : task[Number(paramFromApp)].header}</textarea>\r\n        <textarea id='taskText' className='TextTaskTextarea marginNewTask' placeholder='Текст Задачи'></textarea>\r\n        <div className='dateDiv addNewTask'>\r\n          <div className='taskDate'>\r\n            <span>Начало задачи</span>\r\n            <DatePicker selected={startTaskDate} onChange={(date) => setStartTaskDate(date)} />  \r\n          </div>\r\n          <div className='taskDate'>\r\n            <span>Окончание задачи</span>\r\n            <DatePicker selected={endTaskDate} onChange={(date) => setEndTaskDate(date)} /> \r\n          </div>\r\n        </div>\r\n        <button className='addNewTask' onClick={addNewTask}>Добавить Задачу</button>\r\n       </div>\r\n      </header>\r\n    </div>\r\n    )\r\n  }\r\n  \r\n  export default NewTask;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}