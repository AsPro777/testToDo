{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.prokudina\\\\Desktop\\\\repos\\\\testnumedy\\\\testnumedy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editIsDo, delTask } from './app/taskSlice';\nimport { selectTask, sortTaskTitle } from './app/taskSlice';\nimport './App.css';\nimport NewTask from './NewTask';\nimport { useNavigate } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const task = useSelector(selectTask);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [hasMoreTask, setHasMoreTask] = useState(true);\n  const [countPage, setCountPage] = useState(1);\n  const [selectParamSort, setSelectParamSort] = useState(0);\n  const delIdRef = useRef(0);\n  const countOfTask = useRef(task.length);\n\n  /*switch(selectParamSort) {\n    case 'onTitle' : { dispatch(sortTaskTitle()); break;  }\n    case 'onDateStart' : { dispatch(sortTaskTitle()); break;  }\n    default: { break; }\n  }*/\n\n  //dispatch(sortTask(task));\n\n  // console.log(task);\n\n  const [taskMas, setTaskMas] = useState([]);\n  useEffect(() => {\n    nextTaskMas(countPage);\n  }, []);\n\n  /*добавить в массив заданий, отображаемых на экране следующие 15 элементов. n- количество отображенных страниц */\n  function nextTaskMas(n) {\n    let arr = task.slice(0, 15 * n);\n    setTaskMas(arr);\n  }\n\n  /*действия выполняемые когда прокрутим до 15-го элемента */\n  function fetchMoreTask() {\n    if (taskMas.length >= countOfTask.current) {\n      setHasMoreTask(false);\n      return;\n    }\n    setCountPage(countPage + 1);\n    nextTaskMas(countPage + 1);\n  }\n  ;\n\n  /*переход на стр Новая задача по клику */\n  function goToNewTask() {\n    navigate(\"/newTask/new\");\n  }\n\n  /*вывод списка всех заданий */\n  const AllTask = props => {\n    const arr = [];\n    if (props.allTask) {\n      props.allTask.map((str, id) => {\n        arr.push( /*#__PURE__*/_jsxDEV(AllTaskItem, {\n          id: id,\n          text: str.text,\n          header: str.header,\n          dateStart: str.fromDate,\n          dateEnd: str.endDate,\n          isDo: str.isDo\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this));\n      });\n    }\n    return arr;\n  };\n\n  /*Открыть диалоговое окно */\n  const openDialog = event => {\n    delIdRef.current = event.currentTarget.id;\n    setOpen(true);\n  };\n\n  /*Закрытие диалогового окна без удаления задачи */\n  const dontDelTask = () => {\n    setOpen(false);\n  };\n\n  /*изменение флага Выполнена/Не выполнена задача */\n  function changeIsDo(event) {\n    const id = event.currentTarget.id;\n    dispatch(editIsDo({\n      'id': id\n    }));\n  }\n\n  /*Клик по кнопке \"Удалить\" - выводим диалоговое окно. Далее удаляем или нет в зависимости от выбора пользователя */\n  function deleteTask(event) {\n    //const id=event.currentTarget.id;\n    dispatch(delTask({\n      'id': delIdRef.current\n    }));\n    dontDelTask();\n  }\n\n  /*Клик по кнопке \"Редактировать\" - переход на новую страницу и редактирование в ней задания */\n  function editTask(event) {\n    const id = event.currentTarget.id;\n    navigate(\"/newTask/\" + id);\n  }\n\n  /*отдельное задание */\n  const AllTaskItem = props => {\n    let dateStart_ = formatDate(props.dateStart);\n    let dateEnd_ = formatDate(props.dateEnd);\n    let a = 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textTaskDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headTask\",\n          children: props.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textTask\",\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divDate\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E: \", dateStart_]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u041E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u0435: \", dateEnd_]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsTaskDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: props.isDo,\n            onChange: changeIsDo,\n            id: props.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: props.id,\n          className: \"delEditButton\",\n          onClick: openDialog,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: dontDelTask,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"alert-dialog-title\",\n            children: \"Вы действительно хотите удалить задачу?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: dontDelTask,\n              children: \"\\u041D\\u0435\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteTask,\n              autoFocus: true,\n              children: \"\\u0414\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delEditButton\",\n          onClick: editTask,\n          id: props.id,\n          children: \"\\u0420\\u0415\\u0414\\u0410\\u041A\\u0422\\u0418\\u0420\\u041E\\u0412\\u0410\\u0422\\u042C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n\n  /*вывод даты в нужном формате */\n  function formatDate(dat) {\n    const datDate = new Date(dat);\n    let monthNames = [\"янв\", \"фев\", \"март\", \"апр\", \"май\", \"июнь\", \"июль\", \"авг\", \"сент\", \"окт\", \"нояб\", \"декаб\"];\n    let mon = monthNames[datDate.getMonth()];\n    let newDate = `${datDate.getDate()} ${mon} ${datDate.getFullYear()}г`;\n    return newDate;\n  }\n  function taskChangeSort(event) {\n    const id = event.currentTarget.value;\n    setSelectParamSort(id);\n  }\n\n  /*компонент выпадающий список для сортировки */\n  const SortDropDown = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: taskChangeSort,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"\\u041F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u044B \\u0441\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"onTitle\",\n        children: \"\\u041F\\u043E \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"onDateStart\",\n        children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"onDateEnd\",\n        children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"onIsDo\",\n        children: \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u044B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"goToButton\",\n            onClick: goToNewTask,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(SortDropDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrayOfTask\",\n          children: task !== null && task !== undefined && JSON.stringify(task) !== '{}' && JSON.stringify(task) !== '[]' ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            dataLength: taskMas.length,\n            next: fetchMoreTask,\n            hasMore: hasMoreTask,\n            endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 31\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(AllTask, {\n              allTask: taskMas\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emptyTasks\",\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447 \\u043F\\u0443\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UFABP18oTZggzqdDNtaM1HrodBg=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSelector","useDispatch","editIsDo","delTask","selectTask","sortTaskTitle","NewTask","useNavigate","Button","Dialog","DialogActions","DialogTitle","InfiniteScroll","App","task","dispatch","navigate","open","setOpen","hasMoreTask","setHasMoreTask","countPage","setCountPage","selectParamSort","setSelectParamSort","delIdRef","countOfTask","length","taskMas","setTaskMas","nextTaskMas","n","arr","slice","fetchMoreTask","current","goToNewTask","AllTask","props","allTask","map","str","id","push","text","header","fromDate","endDate","isDo","openDialog","event","currentTarget","dontDelTask","changeIsDo","deleteTask","editTask","AllTaskItem","dateStart_","formatDate","dateStart","dateEnd_","dateEnd","a","dat","datDate","Date","monthNames","mon","getMonth","newDate","getDate","getFullYear","taskChangeSort","value","SortDropDown","undefined","JSON","stringify","textAlign"],"sources":["C:/Users/a.prokudina/Desktop/repos/testnumedy/testnumedy/src/App.js"],"sourcesContent":["\nimport React, { useState, useRef,useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  editIsDo, delTask} from './app/taskSlice';\nimport { selectTask , sortTaskTitle } from './app/taskSlice';\nimport './App.css';\nimport NewTask from './NewTask';\nimport {useNavigate} from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nfunction App() {\n\n  const task=useSelector(selectTask);\n  const dispatch=useDispatch();\n  const navigate=useNavigate();\n  const [open, setOpen] = useState(false);\n  const [hasMoreTask , setHasMoreTask] = useState(true);\n  const [countPage , setCountPage] = useState(1);\n  const [selectParamSort , setSelectParamSort] = useState(0);\n\n  const delIdRef = useRef(0);\n  const countOfTask = useRef(task.length);\n\n  /*switch(selectParamSort) {\n    case 'onTitle' : { dispatch(sortTaskTitle()); break;  }\n    case 'onDateStart' : { dispatch(sortTaskTitle()); break;  }\n    default: { break; }\n  }*/\n\n  //dispatch(sortTask(task));\n  \n  \n// console.log(task);\n\n\n  const [taskMas , setTaskMas] = useState([]);\n\n  useEffect(()=>{ nextTaskMas(countPage) },[])\n\n  /*добавить в массив заданий, отображаемых на экране следующие 15 элементов. n- количество отображенных страниц */\n  function nextTaskMas(n){\n    let arr=task.slice(0, 15*n);\n    setTaskMas(arr);\n  }\n\n  /*действия выполняемые когда прокрутим до 15-го элемента */\n  function fetchMoreTask () {\n    if (taskMas.length >= countOfTask.current) {\n      setHasMoreTask(false);\n      return;\n    }\n\n    setCountPage(countPage+1);\n    nextTaskMas(countPage+1)\n  };\n\n  /*переход на стр Новая задача по клику */\n  function goToNewTask() {\n    navigate(\"/newTask/new\")\n  }\n\n  /*вывод списка всех заданий */\n  const AllTask = (props) => {\n    const arr=[];\n\n    if(props.allTask) {\n      props.allTask.map((str,id) => { \n          arr.push(<AllTaskItem key={id} \n                                 id={id} \n                               text={str.text} \n                             header={str.header}\n                             dateStart={str.fromDate}\n                             dateEnd={str.endDate}\n                             isDo={str.isDo}/>)\n      })\n    }\n    \n    return arr;\n  }\n\n  /*Открыть диалоговое окно */\n  const openDialog = (event) => {\n     delIdRef.current=event.currentTarget.id;  setOpen(true);  };\n\n\n  /*Закрытие диалогового окна без удаления задачи */\n  const dontDelTask = () => { setOpen(false);  };\n\n  /*изменение флага Выполнена/Не выполнена задача */\n  function changeIsDo(event) {\n    const id=event.currentTarget.id;\n    dispatch(editIsDo({'id': id}));\n  }\n\n  /*Клик по кнопке \"Удалить\" - выводим диалоговое окно. Далее удаляем или нет в зависимости от выбора пользователя */\n  function deleteTask(event){\n    //const id=event.currentTarget.id;\n    dispatch(delTask({'id': delIdRef.current}));\n    dontDelTask();\n  }\n\n  /*Клик по кнопке \"Редактировать\" - переход на новую страницу и редактирование в ней задания */\n  function editTask(event){\n    const id=event.currentTarget.id;\n    navigate(\"/newTask/\"+id);\n  }\n\n  /*отдельное задание */\n  const AllTaskItem = (props) => {\n    let dateStart_ = formatDate(props.dateStart) ;\n    let dateEnd_ = formatDate(props.dateEnd);\n    let a=1;\n\n    return(\n      <div className='itemTask'>\n        <div className='textTaskDiv'>\n          <div className='headTask'>{props.header}</div>\n          <div className='textTask'>{props.text}</div>\n          <div className='divDate'>\n            <span>Начало: {dateStart_}</span>\n            <span>Окончание: {dateEnd_}</span>\n          </div>\n        </div>\n        <div className='buttonsTaskDiv'>\n          <label>\n            <input type='checkbox' checked={props.isDo} onChange={changeIsDo} id={props.id}/>\n            Выполнено\n          </label>\n            <Button id={props.id} className='delEditButton' onClick={openDialog}>Удалить</Button>\n              <Dialog\n                open={open}\n                onClose={dontDelTask}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">\n                  {\"Вы действительно хотите удалить задачу?\"}\n                </DialogTitle>\n                <DialogActions>\n                  <Button onClick={dontDelTask}>Нет</Button>\n                  <Button onClick={deleteTask} autoFocus>Да</Button>\n                </DialogActions>\n              </Dialog>\n\n            <button className='delEditButton' onClick={editTask} id={props.id}>РЕДАКТИРОВАТЬ</button>\n\n        </div>\n\n      </div>);\n  }\n\n  /*вывод даты в нужном формате */\n  function formatDate(dat){\n\n    const datDate = new Date(dat);\n    let monthNames= [ \"янв\", \"фев\", \"март\", \"апр\", \"май\", \"июнь\",\"июль\", \"авг\", \"сент\", \"окт\", \"нояб\", \"декаб\"];\n    let mon=monthNames[datDate.getMonth()];\n    let newDate = `${datDate.getDate()} ${mon} ${datDate.getFullYear()}г`;\n    \n    return newDate;\n  }\n\n  function taskChangeSort(event){\n    const id=event.currentTarget.value;\n    setSelectParamSort(id);\n  }\n\n  /*компонент выпадающий список для сортировки */\n  const SortDropDown = () => {\n    return(\n      <select onChange={taskChangeSort}>\n        <option value='' disabled>Параметры сортировки</option>\n        <option value=\"onTitle\">По названию</option>\n        <option value=\"onDateStart\">По дате начала</option>\n        <option value=\"onDateEnd\">По дате окончания</option>\n        <option value=\"onIsDo\">Только выполненые</option>\n      </select>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <div className='mainDiv'>\n           <div className='headerDiv'>\n             <button className='goToButton' onClick={goToNewTask}>Создать новую задачу</button>\n             <SortDropDown/>\n           </div>\n           \n           <div className='arrayOfTask'>\n           { \n            ((task!==null) && (task!==undefined) && (JSON.stringify(task)!=='{}') && (JSON.stringify(task)!=='[]')) ? \n            <InfiniteScroll\n                  dataLength={taskMas.length}\n                  next={fetchMoreTask}\n                  hasMore={hasMoreTask}\n                  endMessage={\n                              <p style={{ textAlign: \"center\" }}>\n                                 <b>Конец списка</b>\n                              </p>\n                  } >\n                <AllTask allTask={taskMas}/>  \n            </InfiniteScroll>\n              :\n              <div className='emptyTasks'>Список задач пуст</div>\n           }\n           </div>\n       </div>\n      </header>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}